{
  "openapi": "3.1.0",
  "info": {
    "title": "v2",
    "version": "unknown"
  },
  "servers": [
    {
      "url": "https://api.coingate.com/api/v2"
    }
  ],
  "components": {
    "securitySchemes": {}
  },
  "security": [
    {}
  ],
  "paths": {
    "/orders": {
      "get": {
        "summary": "List Orders",
        "description": "Retrieving information of all placed orders.",
        "operationId": "list-orders",
        "parameters": [
          {
            "name": "per_page",
            "in": "query",
            "description": "How many orders per page. Max: 100. Default: 100.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort orders by field. Available sort options: created_at_asc, created_at_desc. Default: created_at_desc.",
            "schema": {
              "type": "string",
              "default": "created_at_desc"
            }
          },
          {
            "name": "created_at[from]",
            "in": "query",
            "description": "Optional. Where order creation time is equal or greater. Example: 2018-09-01",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_at[to]",
            "in": "query",
            "description": "Optional. Where order creation time is equal or less. Example: 2018-09-30",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"current_page\": 1,\n  \"per_page\": 2,\n  \"total_orders\": 455,\n  \"total_pages\": 228,\n  \"orders\": [\n    {\n      \"id\": 537,\n      \"status\": \"canceled\",\n      \"title\": \"test\",\n      \"do_not_convert\": false,\n      \"orderable_type\": \"Button\",\n      \"orderable_id\": 2,\n      \"price_currency\": \"EUR\",\n      \"price_amount\": \"10.0\",\n      \"lightning_network\": false,\n      \"receive_currency\": \"\",\n      \"receive_amount\": \"0\",\n      \"created_at\": \"2022-12-09T13:53:43+00:00\",\n      \"order_id\": \"\",\n      \"payment_url\": \"http://localhost:3000/invoice/e386db94-d648-4b4b-9b19-1f2825f7eb32\",\n      \"underpaid_amount\": \"0\",\n      \"overpaid_amount\": \"0\",\n      \"is_refundable\": false,\n      \"refunds\": [],\n      \"voids\": [],\n      \"fees\": []\n    },\n    {\n      \"id\": 536,\n      \"status\": \"canceled\",\n      \"title\": \"test\",\n      \"do_not_convert\": false,\n      \"orderable_type\": \"Button\",\n      \"orderable_id\": 2,\n      \"price_currency\": \"EUR\",\n      \"price_amount\": \"20.0\",\n      \"pay_currency\": \"BTC\",\n      \"pay_amount\": \"0.0009822\",\n      \"lightning_network\": false,\n      \"receive_currency\": \"USDT\",\n      \"receive_amount\": \"0\",\n      \"created_at\": \"2022-12-07T11:27:11+00:00\",\n      \"expire_at\": \"2022-12-07T11:47:18+00:00\",\n      \"payment_address\": \"00e5602a-3380-4437-b1df-483ff84c47de\",\n      \"order_id\": \"\",\n      \"payment_url\": \"http://localhost:3000/invoice/725ee4b4-4a75-45a5-8f3d-c8012546cda9\",\n      \"underpaid_amount\": \"0.0009822\",\n      \"overpaid_amount\": \"0\",\n      \"is_refundable\": false,\n      \"conversion_rate\": \"20566.0\",\n      \"refunds\": [],\n      \"voids\": [],\n      \"fees\": []\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "current_page": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "per_page": {
                      "type": "integer",
                      "example": 2,
                      "default": 0
                    },
                    "total_orders": {
                      "type": "integer",
                      "example": 455,
                      "default": 0
                    },
                    "total_pages": {
                      "type": "integer",
                      "example": 228,
                      "default": 0
                    },
                    "orders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 537,
                            "default": 0
                          },
                          "status": {
                            "type": "string",
                            "example": "canceled"
                          },
                          "title": {
                            "type": "string",
                            "example": "test"
                          },
                          "do_not_convert": {
                            "type": "boolean",
                            "example": false,
                            "default": true
                          },
                          "orderable_type": {
                            "type": "string",
                            "example": "Button"
                          },
                          "orderable_id": {
                            "type": "integer",
                            "example": 2,
                            "default": 0
                          },
                          "price_currency": {
                            "type": "string",
                            "example": "EUR"
                          },
                          "price_amount": {
                            "type": "string",
                            "example": "10.0"
                          },
                          "lightning_network": {
                            "type": "boolean",
                            "example": false,
                            "default": true
                          },
                          "receive_currency": {
                            "type": "string",
                            "example": ""
                          },
                          "receive_amount": {
                            "type": "string",
                            "example": "0"
                          },
                          "created_at": {
                            "type": "string",
                            "example": "2022-12-09T13:53:43+00:00"
                          },
                          "order_id": {
                            "type": "string",
                            "example": ""
                          },
                          "payment_url": {
                            "type": "string",
                            "example": "http://localhost:3000/invoice/e386db94-d648-4b4b-9b19-1f2825f7eb32"
                          },
                          "underpaid_amount": {
                            "type": "string",
                            "example": "0"
                          },
                          "overpaid_amount": {
                            "type": "string",
                            "example": "0"
                          },
                          "is_refundable": {
                            "type": "boolean",
                            "example": false,
                            "default": true
                          },
                          "refunds": {
                            "type": "array"
                          },
                          "voids": {
                            "type": "array"
                          },
                          "fees": {
                            "type": "array"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-readme": {
          "code-samples": [
            {
              "language": "curl",
              "code": "curl -H \"Authorization: Token YOUR_APP_TOKEN\" https://api.coingate.com/v2/orders?per_page=2&page=1&sort=created_at_desc\n\n# Filter by created_at[from]=2022-01-01&created_at[to]=2022-12-31\ncurl -H 'Authorization: Token YOUR_APP_TOKEN' \"https://api.coingate.com/v2/orders?created_at%5Bfrom%5D=2022-01-01&created_at%5Bto%5D=2022-12-31\"\n     "
            }
          ],
          "samples-languages": [
            "curl"
          ]
        }
      },
      "post": {
        "summary": "Create Order",
        "description": "Create order at CoinGate and redirect shopper to invoice (payment_url). \nThis is private API endpoint and requires [authentication](https://developer.coingate.com/docs/api-authentication).",
        "operationId": "create-order",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "price_amount",
                  "price_currency",
                  "receive_currency"
                ],
                "properties": {
                  "order_id": {
                    "type": "string",
                    "description": "Merchant's custom order ID. We recommend using a unique order ID. Example: *CGORDER-12345*."
                  },
                  "price_amount": {
                    "type": "number",
                    "description": "The price set by the merchant. Example: *1050.99*.",
                    "format": "double"
                  },
                  "price_currency": {
                    "type": "string",
                    "description": "[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code which defines the currency in which you wish to price your merchandise; used to define price parameter. [Supported currencies](https://developer.coingate.com/docs/currencies)"
                  },
                  "receive_currency": {
                    "type": "string",
                    "description": "[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code which defines the currency in which you wish to receive your settlements. Currency conversions are done by CoinGate. Possible values: fiat - *EUR*; stablecoin - *USDT*; crypto: *BTC*, *LTC*, *ETH* or *DO_NOT_CONVERT*. **Note**: use *DO_NOT_CONVERT* to keep payments received in original currency (Altcoin payments will be converted to BTC). With *DO_NOT_CONVERT* you can also extend invoice expiration time up to 24 hours. [Supported currencies](https://developer.coingate.com/docs/currencies)"
                  },
                  "title": {
                    "type": "string",
                    "description": "Max 150 characters. Example: product title (Apple iPhone 6), order id (MyShop Order #12345), cart id (Cart #00004335)."
                  },
                  "description": {
                    "type": "string",
                    "description": "More details about this order. Max 500 characters. It can be cart items, product details or other information. Example: 1 x Apple iPhone 6, 1 x Apple MacBook Air."
                  },
                  "callback_url": {
                    "type": "string",
                    "description": "Send an automated message to Merchant URL when order status is changed. For testing you can use [requestcatcher.com](https://requestcatcher.com) tool."
                  },
                  "cancel_url": {
                    "type": "string",
                    "description": "Redirect to Merchant URL when buyer cancels the order"
                  },
                  "success_url": {
                    "type": "string",
                    "description": "Redirect to Merchant URL after successful payment"
                  },
                  "token": {
                    "type": "string",
                    "description": "Your custom token to validate payment callback (notification)."
                  },
                  "purchaser_email": {
                    "type": "string",
                    "description": "Email address of the purchaser (payee) provided will be pre-filled on the invoice."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"id\": 538,\n  \"status\": \"new\",\n  \"title\": \"Order #111\",\n  \"do_not_convert\": false,\n  \"orderable_type\": \"ApiApp\",\n  \"orderable_id\": 3,\n  \"price_currency\": \"EUR\",\n  \"price_amount\": \"10.0\",\n  \"lightning_network\": false,\n  \"receive_currency\": \"EUR\",\n  \"receive_amount\": \"0\",\n  \"created_at\": \"2022-12-09T14:02:41+00:00\",\n  \"order_id\": \"111\",\n  \"payment_url\": \"http://localhost:3000/invoice/a275c4a1-fc54-45b1-a98a-66652e338fb2\",\n  \"underpaid_amount\": \"0\",\n  \"overpaid_amount\": \"0\",\n  \"is_refundable\": false,\n  \"refunds\": [],\n  \"voids\": [],\n  \"fees\": [],\n  \"token\": \"PsPXSa46uohMtMWqfzTrnwy3p3sNmQ\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 538,
                      "default": 0
                    },
                    "status": {
                      "type": "string",
                      "example": "new"
                    },
                    "title": {
                      "type": "string",
                      "example": "Order #111"
                    },
                    "do_not_convert": {
                      "type": "boolean",
                      "example": false,
                      "default": true
                    },
                    "orderable_type": {
                      "type": "string",
                      "example": "ApiApp"
                    },
                    "orderable_id": {
                      "type": "integer",
                      "example": 3,
                      "default": 0
                    },
                    "price_currency": {
                      "type": "string",
                      "example": "EUR"
                    },
                    "price_amount": {
                      "type": "string",
                      "example": "10.0"
                    },
                    "lightning_network": {
                      "type": "boolean",
                      "example": false,
                      "default": true
                    },
                    "receive_currency": {
                      "type": "string",
                      "example": "EUR"
                    },
                    "receive_amount": {
                      "type": "string",
                      "example": "0"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2022-12-09T14:02:41+00:00"
                    },
                    "order_id": {
                      "type": "string",
                      "example": "111"
                    },
                    "payment_url": {
                      "type": "string",
                      "example": "http://localhost:3000/invoice/a275c4a1-fc54-45b1-a98a-66652e338fb2"
                    },
                    "underpaid_amount": {
                      "type": "string",
                      "example": "0"
                    },
                    "overpaid_amount": {
                      "type": "string",
                      "example": "0"
                    },
                    "is_refundable": {
                      "type": "boolean",
                      "example": false,
                      "default": true
                    },
                    "refunds": {
                      "type": "array"
                    },
                    "voids": {
                      "type": "array"
                    },
                    "fees": {
                      "type": "array"
                    },
                    "token": {
                      "type": "string",
                      "example": "PsPXSa46uohMtMWqfzTrnwy3p3sNmQ"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"Order is not valid\",\n    \"reason\": \"OrderIsNotValid\",\n    \"errors\": [\n        \"Price can't be blank\",\n        \"Price is not a number\",\n        \"Btc amount can't be blank\",\n        \"Btc amount is not a number\"\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Order is not valid"
                    },
                    "reason": {
                      "type": "string",
                      "example": "OrderIsNotValid"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Price can't be blank"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-readme": {
          "code-samples": [
            {
              "language": "curl",
              "code": "curl -X \"POST\" \"https://api.coingate.com/v2/orders\" \\\n     -H 'Authorization: Token 1234' \\\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8' \\\n     --data-urlencode \"title=Order #111\" \\\n     --data-urlencode \"price_amount=1149\" \\\n     --data-urlencode \"price_currency=EUR\" \\\n     --data-urlencode \"receive_currency=EUR\" \\\n     --data-urlencode \"callback_url=https://example.com/test\" \\\n     --data-urlencode \"success_url=http://example.com/success\" \\\n     --data-urlencode \"cancel_url=http://example.com/cancel\" \\\n     --data-urlencode \"order_id=111\" \\\n     --data-urlencode \"description=1 x MacBook Air 13.3\\\" Retina M1 8-core CPU 7-core GPU/8GB/256GB/Gold/INT\"\n"
            }
          ],
          "samples-languages": [
            "curl"
          ]
        }
      }
    },
    "/ping": {
      "get": {
        "summary": "Ping",
        "description": "A health check endpoint for CoinGate API. This endpoint is public, authentication is not required.",
        "operationId": "ping",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  ping: \"pong\",\n  time: \"2017-12-13T19:07:18+00:00\"\n}"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/rates/merchant/{from}/{to}": {
      "get": {
        "summary": "Get Exchange Rate",
        "description": "Current exchange rate for any two currencies, fiat or crypto. This endpoint is public, authentication is not required.",
        "operationId": "get-rate",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "ISO Symbol. Example: EUR, USD, BTC, ETH, [etc](https://coingate.com/currencies).",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "to",
            "in": "path",
            "description": "ISO Symbol. Example: EUR, USD, BTC, ETH, [etc](https://coingate.com/currencies).",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "7469.5"
                  }
                },
                "schema": {
                  "type": "number",
                  "example": 7469.5,
                  "default": 0
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/orders/{id}": {
      "get": {
        "summary": "Get Order",
        "description": "Before making a GET order request, a user should have an already CREATED order, which can be paid or canceled. To CREATE ORDER, please follow the instructions here https://developer.coingate.com/docs/create-order \n\nAfter creating an order, you will get an ORDER ID. This ID will be used for GET ORDER requests.\n\nPlease, take into account that before creating requests within the CoinGate system, the user should have an authentication token. To have it, please follow the instructions here https://developer.coingate.com/docs/api-authentication",
        "operationId": "get-order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "CoinGate Order id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"id\": 535,\n  \"status\": \"paid\",\n  \"title\": \"test\",\n  \"do_not_convert\": false,\n  \"orderable_type\": \"Button\",\n  \"orderable_id\": 2,\n  \"price_currency\": \"EUR\",\n  \"price_amount\": \"100.0\",\n  \"pay_currency\": \"BTC\",\n  \"pay_amount\": \"0.00489886\",\n  \"lightning_network\": false,\n  \"receive_currency\": \"USDT\",\n  \"receive_amount\": \"99.758162\",\n  \"created_at\": \"2022-12-06T10:58:21+00:00\",\n  \"expire_at\": \"2022-12-06T11:18:25+00:00\",\n  \"paid_at\": \"2022-12-06T10:58:31+00:00\",\n  \"payment_address\": \"c9a71333-2ab9-4e66-a50d-d111f732cb08\",\n  \"order_id\": \"\",\n  \"payment_url\": \"http://localhost:3000/invoice/68d7e03c-6bd0-401e-b9c3-f891709b88d8\",\n  \"underpaid_amount\": \"0.00489886\",\n  \"overpaid_amount\": \"0\",\n  \"is_refundable\": false,\n  \"conversion_rate\": \"20566.0\",\n  \"refunds\": [\n    {\n      \"id\": 8,\n      \"request_amount\": \"10.0\",\n      \"refund_amount\": \"0.0004862\",\n      \"address\": \"3CCV3GjNvQip5ewsHhzYc136WhaeCzHigj\",\n      \"status\": \"pending\",\n      \"memo\": null,\n      \"created_at\": \"2022-12-06T11:01:50+00:00\",\n      \"order\": {\n        \"id\": 535\n      },\n      \"refund_currency\": {\n        \"id\": 1,\n        \"title\": \"Bitcoin\",\n        \"symbol\": \"BTC\",\n        \"platform\": {\n          \"id\": 5,\n          \"title\": \"Bitcoin\"\n        }\n      },\n      \"transactions\": [],\n      \"ledger_account\": {\n        \"id\": \"01GJZBH2JZF3E369HT9GVM71CE\",\n        \"currency\": {\n          \"id\": 1,\n          \"title\": \"Bitcoin\",\n          \"symbol\": \"BTC\"\n        }\n      }\n    }\n  ],\n  \"voids\": [],\n  \"fees\": [\n    {\n      \"type\": \"processing_fee\",\n      \"amount\": \"1.007658\",\n      \"currency\": {\n        \"id\": 21,\n        \"symbol\": \"USDT\"\n      }\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 535,
                      "default": 0
                    },
                    "status": {
                      "type": "string",
                      "example": "paid"
                    },
                    "title": {
                      "type": "string",
                      "example": "test"
                    },
                    "do_not_convert": {
                      "type": "boolean",
                      "example": false,
                      "default": true
                    },
                    "orderable_type": {
                      "type": "string",
                      "example": "Button"
                    },
                    "orderable_id": {
                      "type": "integer",
                      "example": 2,
                      "default": 0
                    },
                    "price_currency": {
                      "type": "string",
                      "example": "EUR"
                    },
                    "price_amount": {
                      "type": "string",
                      "example": "100.0"
                    },
                    "pay_currency": {
                      "type": "string",
                      "example": "BTC"
                    },
                    "pay_amount": {
                      "type": "string",
                      "example": "0.00489886"
                    },
                    "lightning_network": {
                      "type": "boolean",
                      "example": false,
                      "default": true
                    },
                    "receive_currency": {
                      "type": "string",
                      "example": "USDT"
                    },
                    "receive_amount": {
                      "type": "string",
                      "example": "99.758162"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2022-12-06T10:58:21+00:00"
                    },
                    "expire_at": {
                      "type": "string",
                      "example": "2022-12-06T11:18:25+00:00"
                    },
                    "paid_at": {
                      "type": "string",
                      "example": "2022-12-06T10:58:31+00:00"
                    },
                    "payment_address": {
                      "type": "string",
                      "example": "c9a71333-2ab9-4e66-a50d-d111f732cb08"
                    },
                    "order_id": {
                      "type": "string",
                      "example": ""
                    },
                    "payment_url": {
                      "type": "string",
                      "example": "http://localhost:3000/invoice/68d7e03c-6bd0-401e-b9c3-f891709b88d8"
                    },
                    "underpaid_amount": {
                      "type": "string",
                      "example": "0.00489886"
                    },
                    "overpaid_amount": {
                      "type": "string",
                      "example": "0"
                    },
                    "is_refundable": {
                      "type": "boolean",
                      "example": false,
                      "default": true
                    },
                    "conversion_rate": {
                      "type": "string",
                      "example": "20566.0"
                    },
                    "refunds": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 8,
                            "default": 0
                          },
                          "request_amount": {
                            "type": "string",
                            "example": "10.0"
                          },
                          "refund_amount": {
                            "type": "string",
                            "example": "0.0004862"
                          },
                          "address": {
                            "type": "string",
                            "example": "3CCV3GjNvQip5ewsHhzYc136WhaeCzHigj"
                          },
                          "status": {
                            "type": "string",
                            "example": "pending"
                          },
                          "memo": {},
                          "created_at": {
                            "type": "string",
                            "example": "2022-12-06T11:01:50+00:00"
                          },
                          "order": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 535,
                                "default": 0
                              }
                            }
                          },
                          "refund_currency": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 1,
                                "default": 0
                              },
                              "title": {
                                "type": "string",
                                "example": "Bitcoin"
                              },
                              "symbol": {
                                "type": "string",
                                "example": "BTC"
                              },
                              "platform": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "example": 5,
                                    "default": 0
                                  },
                                  "title": {
                                    "type": "string",
                                    "example": "Bitcoin"
                                  }
                                }
                              }
                            }
                          },
                          "transactions": {
                            "type": "array"
                          },
                          "ledger_account": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "01GJZBH2JZF3E369HT9GVM71CE"
                              },
                              "currency": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "example": 1,
                                    "default": 0
                                  },
                                  "title": {
                                    "type": "string",
                                    "example": "Bitcoin"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "example": "BTC"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "voids": {
                      "type": "array"
                    },
                    "fees": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "processing_fee"
                          },
                          "amount": {
                            "type": "string",
                            "example": "1.007658"
                          },
                          "currency": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 21,
                                "default": 0
                              },
                              "symbol": {
                                "type": "string",
                                "example": "USDT"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"message\": \"Order not found\",\n  \"reason\": \"OrderNotFound\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Order not found"
                    },
                    "reason": {
                      "type": "string",
                      "example": "OrderNotFound"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-readme": {
          "code-samples": [
            {
              "language": "curl",
              "code": "curl -H \"Authorization: Token YOUR_APP_TOKEN\" https://api.coingate.com/v2/orders/1195824"
            }
          ],
          "samples-languages": [
            "curl"
          ]
        }
      }
    },
    "/rates": {
      "get": {
        "summary": "List Exchange Rates",
        "description": "Current CoinGate exchange rates for Merchants and Traders. This endpoint is public, authentication is not required.",
        "operationId": "list-rates",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"merchant\": {\n    \"BTC\": {\n      \"EUR\": \"7449.99\",\n      \"USD\": \"9139.34\",\n      \"ETH\": \"13.18044023\"\n    },\n    \"EUR\": {\n      \"BTC\": \"0.00013351\",\n      \"USD\": \"1.2317\",\n      \"ETH\": \"0.00175954\"\n    }\n  },\n  \"trader\": {\n    \"buy\": {\n      \"BTC\": {\n        \"EUR\": \"7449.99\",\n        \"USD\": \"9139.34\",\n        \"ETH\": \"13.18044023\"\n      },\n      \"EUR\": {\n        \"BTC\": \"0.00013351\",\n        \"USD\": \"1.2317\",\n        \"ETH\": \"0.00175954\"\n      }\n    },\n    \"sell\": {\n      \"BTC\": {\n        \"EUR\": \"7449.99\",\n        \"USD\": \"9139.34\",\n        \"ETH\": \"13.18044023\"\n      },\n      \"EUR\": {\n        \"BTC\": \"0.00013351\",\n        \"USD\": \"1.2317\",\n        \"ETH\": \"0.00175954\"\n      }\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "merchant": {
                      "type": "object",
                      "properties": {
                        "BTC": {
                          "type": "object",
                          "properties": {
                            "EUR": {
                              "type": "string",
                              "example": "7449.99"
                            },
                            "USD": {
                              "type": "string",
                              "example": "9139.34"
                            },
                            "ETH": {
                              "type": "string",
                              "example": "13.18044023"
                            }
                          }
                        },
                        "EUR": {
                          "type": "object",
                          "properties": {
                            "BTC": {
                              "type": "string",
                              "example": "0.00013351"
                            },
                            "USD": {
                              "type": "string",
                              "example": "1.2317"
                            },
                            "ETH": {
                              "type": "string",
                              "example": "0.00175954"
                            }
                          }
                        }
                      }
                    },
                    "trader": {
                      "type": "object",
                      "properties": {
                        "buy": {
                          "type": "object",
                          "properties": {
                            "BTC": {
                              "type": "object",
                              "properties": {
                                "EUR": {
                                  "type": "string",
                                  "example": "7449.99"
                                },
                                "USD": {
                                  "type": "string",
                                  "example": "9139.34"
                                },
                                "ETH": {
                                  "type": "string",
                                  "example": "13.18044023"
                                }
                              }
                            },
                            "EUR": {
                              "type": "object",
                              "properties": {
                                "BTC": {
                                  "type": "string",
                                  "example": "0.00013351"
                                },
                                "USD": {
                                  "type": "string",
                                  "example": "1.2317"
                                },
                                "ETH": {
                                  "type": "string",
                                  "example": "0.00175954"
                                }
                              }
                            }
                          }
                        },
                        "sell": {
                          "type": "object",
                          "properties": {
                            "BTC": {
                              "type": "object",
                              "properties": {
                                "EUR": {
                                  "type": "string",
                                  "example": "7449.99"
                                },
                                "USD": {
                                  "type": "string",
                                  "example": "9139.34"
                                },
                                "ETH": {
                                  "type": "string",
                                  "example": "13.18044023"
                                }
                              }
                            },
                            "EUR": {
                              "type": "object",
                              "properties": {
                                "BTC": {
                                  "type": "string",
                                  "example": "0.00013351"
                                },
                                "USD": {
                                  "type": "string",
                                  "example": "1.2317"
                                },
                                "ETH": {
                                  "type": "string",
                                  "example": "0.00175954"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/orders/{id}/checkout": {
      "post": {
        "summary": "Checkout",
        "description": "Placing [created order](doc:create-order) with pre-selected payment currency (BTC, LTC, ETH, etc). Display payment_address and pay_amount for shopper or redirect to payment_url. Can be used to white-label invoices.\n\nThis is private API endpoint and requires [authentication](https://developer.coingate.com/docs/api-authentication).",
        "operationId": "checkout",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "CoinGate order ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "pay_currency"
                ],
                "properties": {
                  "pay_currency": {
                    "type": "string",
                    "description": "Payment cryptocurrency. Possible values: *BTC*, *LTC*, etc. Other cryptocurrencies are processed via a third party and are not accessible with the Checkout method."
                  },
                  "lightning_network": {
                    "type": "boolean",
                    "description": "Lightning network parameter is optional and it is available only for BTC and LTC cryptocurrencies. Maximum available price amount for lightning network orders is 0.042 BTC equivalent."
                  },
                  "purchaser_email": {
                    "type": "string",
                    "description": "Email address of the purchaser (payee) provided will be pre-filled on the invoice."
                  },
                  "platform_id": {
                    "type": "integer",
                    "description": "Is an optional parameter where you can select on what blockchain (platform) the particular digital asset is expected to be received. By default (if the parameter is empty) the system will generate the invoice on the NATIVE blockchain (Binance chain for BNB, Bitcoin chain for BTC, Ethereum chain for ETH, etc.) or on Ethereum blockchain for Tokens (BUSD, DAI USDT, etc.). For more information about available blockchains (platforms) see [here](https://developer.coingate.com/docs/platforms). For more information about blockchain (platform) availability for different currencies see [here](https://developer.coingate.com/docs/currencies).",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"id\": 10568600,\n  \"status\": \"pending\",\n  \"do_not_convert\": false,\n  \"price_currency\": \"EUR\",\n  \"price_amount\": \"1149.0\",\n  \"pay_currency\": \"ETH\",\n  \"pay_amount\": \"0.3315205\",\n  \"lightning_network\": false,\n  \"receive_currency\": \"EUR\",\n  \"receive_amount\": \"1137.51\",\n  \"created_at\": \"2021-12-23T14:00:55+00:00\",\n  \"expire_at\": \"2021-12-23T14:50:02+00:00\",\n  \"payment_address\": \"bnb1lqfu2n6xg9n6ggqjjdjpp4r866vp99qxac87n8?memo=10568600\",\n  \"order_id\": \"111\",\n  \"payment_url\": \"https://pay.coingate.com/invoice/b8d68eee-aa21-478e-bc15-d8251c9dc12e\",\n  \"underpaid_amount\": \"0.3315205\",\n  \"overpaid_amount\": \"0\",\n  \"is_refundable\": false,\n  \"platform\": {\n    \"id\": 2,\n    \"title\": \"Binance Chain (BEP2)\",\n    \"id_name\": \"binance_chain\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 10568600,
                      "default": 0
                    },
                    "status": {
                      "type": "string",
                      "example": "pending"
                    },
                    "do_not_convert": {
                      "type": "boolean",
                      "example": false,
                      "default": true
                    },
                    "price_currency": {
                      "type": "string",
                      "example": "EUR"
                    },
                    "price_amount": {
                      "type": "string",
                      "example": "1149.0"
                    },
                    "pay_currency": {
                      "type": "string",
                      "example": "ETH"
                    },
                    "pay_amount": {
                      "type": "string",
                      "example": "0.3315205"
                    },
                    "lightning_network": {
                      "type": "boolean",
                      "example": false,
                      "default": true
                    },
                    "receive_currency": {
                      "type": "string",
                      "example": "EUR"
                    },
                    "receive_amount": {
                      "type": "string",
                      "example": "1137.51"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2021-12-23T14:00:55+00:00"
                    },
                    "expire_at": {
                      "type": "string",
                      "example": "2021-12-23T14:50:02+00:00"
                    },
                    "payment_address": {
                      "type": "string",
                      "example": "bnb1lqfu2n6xg9n6ggqjjdjpp4r866vp99qxac87n8?memo=10568600"
                    },
                    "order_id": {
                      "type": "string",
                      "example": "111"
                    },
                    "payment_url": {
                      "type": "string",
                      "example": "https://pay.coingate.com/invoice/b8d68eee-aa21-478e-bc15-d8251c9dc12e"
                    },
                    "underpaid_amount": {
                      "type": "string",
                      "example": "0.3315205"
                    },
                    "overpaid_amount": {
                      "type": "string",
                      "example": "0"
                    },
                    "is_refundable": {
                      "type": "boolean",
                      "example": false,
                      "default": true
                    },
                    "platform": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2,
                          "default": 0
                        },
                        "title": {
                          "type": "string",
                          "example": "Binance Chain (BEP2)"
                        },
                        "id_name": {
                          "type": "string",
                          "example": "binance_chain"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"Order does not exist\",\n    \"reason\": \"OrderNotFound\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Order does not exist"
                    },
                    "reason": {
                      "type": "string",
                      "example": "OrderNotFound"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-readme": {
          "code-samples": [
            {
              "language": "curl",
              "code": "curl -X \"POST\" \"https://api.coingate.com/v2/orders/10568600/checkout\" \\\n     -H 'Authorization: Token 1234' \\\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8' \\\n     --data-urlencode \"pay_currency=ETH\" \\\n     --data-urlencode \"platform_id=2\"\n"
            }
          ],
          "samples-languages": [
            "curl"
          ]
        }
      }
    },
    "/currencies": {
      "get": {
        "summary": "Get Currencies",
        "description": "Retrieves all currencies.",
        "operationId": "currencies",
        "parameters": [
          {
            "name": "native",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "enabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "merchant_pay",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "merchant_receive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "kind",
            "in": "query",
            "description": "Accepted values: crypto, fiat",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "[\n  {\n    id: 1,\n    title: 'Bitcoin',\n    kind: 'crypto',\n    symbol: 'BTC',\n    native: true,\n    disabled: false,\n    disabled_message: null,\n    merchant: {\n      price: true,\n      pay: true,\n      receive: true,\n    },\n    platforms: [\n      {\n        id: 8,\n        id_name: 'bitcoin',\n        title: 'Bitcoin',\n        enabled: true,\n      },\n    ],\n  },\n  {\n    id: 2,\n    title: 'Euro',\n    kind: 'fiat',\n    symbol: 'EUR',\n    native: true,\n    disabled: false,\n    disabled_message: null,\n    merchant: {\n      price: true,\n      pay: false,\n      receive: true,\n    },\n  },\n  {\n    id: 3,\n    title: 'United States dollar',\n    kind: 'fiat',\n    symbol: 'USD',\n    native: true,\n    disabled: false,\n    disabled_message: null,\n    merchant: {\n      price: true,\n      pay: false,\n      receive: true,\n    },\n  },\n  {\n    id: 4,\n    title: 'British Pound',\n    kind: 'fiat',\n    symbol: 'GBP',\n    native: true,\n    disabled: false,\n    disabled_message: null,\n    merchant: {\n      price: true,\n      pay: false,\n      receive: true,\n    },\n  },\n  {\n    id: 5,\n    title: 'Ethereum',\n    kind: 'crypto',\n    symbol: 'ETH',\n    native: true,\n    disabled: false,\n    disabled_message: null,\n    merchant: {\n      price: true,\n      pay: true,\n      receive: true,\n    },\n    platforms: [\n      {\n        id: 2,\n        id_name: 'binance_chain',\n        title: 'Binance Chain (BEP2)',\n        enabled: true,\n      },\n      {\n        id: 7,\n        id_name: 'ethereum',\n        title: 'Ethereum',\n        enabled: true,\n      },\n    ],\n  },\n]"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-readme": {
          "code-samples": [
            {
              "language": "curl",
              "code": "curl https://api.coingate.com/v2/currencies\n\n# Enabled + Native + Crypto\ncurl https://api.coingate.com/v2/currencies?native=true&enabled=true&kind=crypto\n\n# Merchant Pay\ncurl https://api.coingate.com/v2/currencies?merchant_pay=true"
            }
          ],
          "samples-languages": [
            "curl"
          ]
        }
      }
    },
    "/platforms": {
      "get": {
        "summary": "Platforms",
        "description": "",
        "operationId": "platforms",
        "parameters": [
          {
            "name": "enabled",
            "in": "query",
            "description": "List only enabled platforms",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "[\n  {\n    \"id\": 1,\n    \"title\": \"Ethereum (ERC20)\",\n    \"id_name\": \"ethereum\",\n    \"disabled\": false,\n    \"disabled_message\": null,\n    \"currencies\": [\n      {\n        \"id\": 50,\n        \"title\": \"Ethereum\",\n        \"symbol\": \"ETH\",\n        \"enabled\": true\n      },\n      {\n        \"id\": 61,\n        \"title\": \"Dai\",\n        \"symbol\": \"DAI\",\n        \"enabled\": true\n      },\n      {\n        \"id\": 71,\n        \"title\": \"Basic Attention Token\",\n        \"symbol\": \"BAT\",\n        \"enabled\": true\n      },\n      {\n        \"id\": 96,\n        \"title\": \"Chainlink\",\n        \"symbol\": \"LINK\",\n        \"enabled\": true\n      },\n      {\n        \"id\": 97,\n        \"title\": \"Tether\",\n        \"symbol\": \"USDT\",\n        \"enabled\": true\n      },\n      {\n        \"id\": 113,\n        \"title\": \"USDC\",\n        \"symbol\": \"USDC\",\n        \"enabled\": true\n      },\n      {\n        \"id\": 116,\n        \"title\": \"Binance USD\",\n        \"symbol\": \"BUSD\",\n        \"enabled\": true\n      },\n      {\n        \"id\": 118,\n        \"title\": \"Wrapped Bitcoin\",\n        \"symbol\": \"WBTC\",\n        \"enabled\": true\n      },\n      {\n        \"id\": 132,\n        \"title\": \"Filecoin\",\n        \"symbol\": \"FIL\",\n        \"enabled\": true\n      },\n      {\n        \"id\": 133,\n        \"title\": \"FTX Token\",\n        \"symbol\": \"FTT\",\n        \"enabled\": true\n      },\n      {\n        \"id\": 136,\n        \"title\": \"The Graph\",\n        \"symbol\": \"GRT\",\n        \"enabled\": true\n      },\n      {\n        \"id\": 137,\n        \"title\": \"Loopring\",\n        \"symbol\": \"LRC\",\n        \"enabled\": true\n      },\n      {\n        \"id\": 139,\n        \"title\": \"Decentraland\",\n        \"symbol\": \"MANA\",\n        \"enabled\": true\n      },\n      {\n        \"id\": 140,\n        \"title\": \"Maker\",\n        \"symbol\": \"MKR\",\n        \"enabled\": true\n      },\n      {\n        \"id\": 149,\n        \"title\": \"Waves\",\n        \"symbol\": \"WAVES\",\n        \"enabled\": true\n      },\n      {\n        \"id\": 163,\n        \"title\": \"Compound\",\n        \"symbol\": \"COMP\",\n        \"enabled\": true\n      },\n      {\n        \"id\": 165,\n        \"title\": \"SHIBA INU\",\n        \"symbol\": \"SHIB\",\n        \"enabled\": true\n      },\n      {\n        \"id\": 166,\n        \"title\": \"Crypto.com Coin\",\n        \"symbol\": \"CRO\",\n        \"enabled\": true\n      },\n      {\n        \"id\": 169,\n        \"title\": \"Axie Infinity\",\n        \"symbol\": \"AXS\",\n        \"enabled\": true\n      },\n      {\n        \"id\": 171,\n        \"title\": \"The Sandbox\",\n        \"symbol\": \"SAND\",\n        \"enabled\": true\n      }\n    ]\n  },\n  {\n    \"id\": 2,\n    \"title\": \"Binance Chain (BEP2)\",\n    \"id_name\": \"binance_chain\",\n    \"disabled\": false,\n    \"disabled_message\": null,\n    \"currencies\": [\n      {\n        \"id\": 50,\n        \"title\": \"Ethereum\",\n        \"symbol\": \"ETH\",\n        \"enabled\": true\n      },\n      {\n        \"id\": 91,\n        \"title\": \"Binance Coin\",\n        \"symbol\": \"BNB\",\n        \"enabled\": true\n      },\n      {\n        \"id\": 97,\n        \"title\": \"Tether\",\n        \"symbol\": \"USDT\",\n        \"enabled\": true\n      },\n      {\n        \"id\": 102,\n        \"title\": \"Travala.com (AVA)\",\n        \"symbol\": \"AVA\",\n        \"enabled\": true\n      },\n      {\n        \"id\": 116,\n        \"title\": \"Binance USD\",\n        \"symbol\": \"BUSD\",\n        \"enabled\": true\n      }\n    ]\n  },\n  {\n    \"id\": 5,\n    \"title\": \"Bitcoin\",\n    \"id_name\": \"bitcoin\",\n    \"disabled\": false,\n    \"disabled_message\": null,\n    \"currencies\": [\n      {\n        \"id\": 8,\n        \"title\": \"Bitcoin\",\n        \"symbol\": \"BTC\",\n        \"enabled\": true\n      }\n    ]\n  },\n  {\n    \"id\": 6,\n    \"title\": \"Litecoin\",\n    \"id_name\": \"litecoin\",\n    \"disabled\": false,\n    \"disabled_message\": null,\n    \"currencies\": [\n      {\n        \"id\": 49,\n        \"title\": \"Litecoin\",\n        \"symbol\": \"LTC\",\n        \"enabled\": true\n      }\n    ]\n  },\n  {\n    \"id\": 7,\n    \"title\": \"Dogecoin\",\n    \"id_name\": \"dogecoin\",\n    \"disabled\": false,\n    \"disabled_message\": null,\n    \"currencies\": [\n      {\n        \"id\": 64,\n        \"title\": \"Dogecoin\",\n        \"symbol\": \"DOGE\",\n        \"enabled\": true\n      }\n    ]\n  },\n  {\n    \"id\": 8,\n    \"title\": \"Bitcoin Cash\",\n    \"id_name\": \"bitcoin_cash\",\n    \"disabled\": false,\n    \"disabled_message\": null,\n    \"currencies\": [\n      {\n        \"id\": 52,\n        \"title\": \"Bitcoin Cash\",\n        \"symbol\": \"BCH\",\n        \"enabled\": true\n      }\n    ]\n  },\n  {\n    \"id\": 9,\n    \"title\": \"XRP\",\n    \"id_name\": \"ripple\",\n    \"disabled\": false,\n    \"disabled_message\": null,\n    \"currencies\": [\n      {\n        \"id\": 53,\n        \"title\": \"XRP\",\n        \"symbol\": \"XRP\",\n        \"enabled\": true\n      }\n    ]\n  },\n  {\n    \"id\": 10,\n    \"title\": \"Bitcoin Vault\",\n    \"id_name\": \"bitcoinvault\",\n    \"disabled\": false,\n    \"disabled_message\": null,\n    \"currencies\": [\n      {\n        \"id\": 106,\n        \"title\": \"Bitcoin Vault\",\n        \"symbol\": \"BTCV\",\n        \"enabled\": true\n      }\n    ]\n  }\n]\n"
                  }
                },
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1,
                        "default": 0
                      },
                      "title": {
                        "type": "string",
                        "example": "Ethereum (ERC20)"
                      },
                      "id_name": {
                        "type": "string",
                        "example": "ethereum"
                      },
                      "disabled": {
                        "type": "boolean",
                        "example": false,
                        "default": true
                      },
                      "disabled_message": {},
                      "currencies": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 50,
                              "default": 0
                            },
                            "title": {
                              "type": "string",
                              "example": "Ethereum"
                            },
                            "symbol": {
                              "type": "string",
                              "example": "ETH"
                            },
                            "enabled": {
                              "type": "boolean",
                              "example": true,
                              "default": true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-readme": {
          "code-samples": [
            {
              "language": "shell",
              "code": "curl https://api.coingate.com/v2/platforms\n\ncurl https://api.coingate.com/v2/platforms?enabled=true"
            }
          ],
          "samples-languages": [
            "shell"
          ]
        }
      }
    },
    "/orders/{order_id}/refunds": {
      "post": {
        "summary": "Create Order Refund",
        "description": "Creates a refund for an order.\n\nBefore making a <b>POST Create Order Refund</b> request, a [POST Create Order](/reference/create-order) request should be made. \n\nAfter an order is created, you will get the order ID which will be used in the <b>POST Create Order Refund</b> request.\n\nPlatform ID can be found by making a [GET Currencies](/reference/currencies) request and finding the currency in which the refund will be issued. \n\nLedger account ID can be found by making a [GET List Accounts](/reference/accounts) request and finding the ledger account ID associated with the currency in which the refund will be issued. \n\n❗To create requests within the CoinGate system the user should have an authentication token. To get it, please follow the instructions <a href=\"https://developer.coingate.com/docs/api-authentication\" target=\"_blank\">here</a>.",
        "operationId": "create-refund",
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "description": "ID of the order to be refunded",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "address",
                  "currency_id",
                  "platform_id",
                  "reason",
                  "email",
                  "ledger_account_id"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "description": "Requesting amount in order price currency to refund",
                    "format": "double"
                  },
                  "address": {
                    "type": "string",
                    "description": "Cryptocurrency address to which the refund will be sent"
                  },
                  "address_memo": {
                    "type": "string"
                  },
                  "currency_id": {
                    "type": "integer",
                    "description": "ID of the currency in which the refund will be issued",
                    "format": "int32"
                  },
                  "platform_id": {
                    "type": "integer",
                    "description": "Platform ID of the currency in which the refund will be issued",
                    "format": "int32"
                  },
                  "reason": {
                    "type": "string",
                    "description": "Reason for issuing the refund"
                  },
                  "email": {
                    "type": "string",
                    "description": "Customer will receive updates on refund status to this email"
                  },
                  "ledger_account_id": {
                    "type": "string",
                    "description": "ID of the trader balance associated with the currency in which the refund will be issued"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "amount": 50,
                    "address": "tb1qparagdh9h884lptjmlt20ugc05xrvhu32qa05z6",
                    "currency_id": 1,
                    "platform_id": 5,
                    "reason": "Reason",
                    "email": "example@example.com",
                    "ledger_account_id": "01G130Q2T06NYKC9F3STKANAD1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n   \"id\":2,\n   \"request_amount\":\"1.0\",\n   \"refund_amount\":\"1.0553\",\n   \"address\":\"0x165E05749951AB88B5F17bd1f2080eC3dFB442E6\",\n   \"status\":\"pending\",\n   \"memo\":null,\n   \"created_at\":\"2022-05-04T13:30:38+00:00\",\n   \"order\":{\n      \"id\":11874016,\n      \"title\":null,\n      \"price_amount\":\"2.0\",\n      \"created_at\":\"2022-05-04T10:50:01+00:00\",\n      \"price_currency\":{\n         \"id\":11,\n         \"title\":\"Euro\",\n         \"kind\":\"fiat\",\n         \"symbol\":\"EUR\"\n      }\n   },\n   \"refund_currency\":{\n      \"id\":97,\n      \"title\":\"Tether\",\n      \"symbol\":\"USDT\",\n      \"platform\":{\n         \"id\":1,\n         \"title\":\"Ethereum\"\n      }\n   },\n   \"transactions\":[],\n   \"ledger_account\":{\n      \"id\":\"01G27GBKX653FKV2S0SCXXDBES\",\n      \"currency\":{\n         \"id\":97,\n         \"title\":\"Tether\",\n         \"symbol\":\"USDT\"\n      }\n   }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 2,
                      "default": 0
                    },
                    "request_amount": {
                      "type": "string",
                      "example": "1.0"
                    },
                    "refund_amount": {
                      "type": "string",
                      "example": "1.0553"
                    },
                    "address": {
                      "type": "string",
                      "example": "0x165E05749951AB88B5F17bd1f2080eC3dFB442E6"
                    },
                    "status": {
                      "type": "string",
                      "example": "pending"
                    },
                    "memo": {},
                    "created_at": {
                      "type": "string",
                      "example": "2022-05-04T13:30:38+00:00"
                    },
                    "order": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 11874016,
                          "default": 0
                        },
                        "title": {},
                        "price_amount": {
                          "type": "string",
                          "example": "2.0"
                        },
                        "created_at": {
                          "type": "string",
                          "example": "2022-05-04T10:50:01+00:00"
                        },
                        "price_currency": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 11,
                              "default": 0
                            },
                            "title": {
                              "type": "string",
                              "example": "Euro"
                            },
                            "kind": {
                              "type": "string",
                              "example": "fiat"
                            },
                            "symbol": {
                              "type": "string",
                              "example": "EUR"
                            }
                          }
                        }
                      }
                    },
                    "refund_currency": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 97,
                          "default": 0
                        },
                        "title": {
                          "type": "string",
                          "example": "Tether"
                        },
                        "symbol": {
                          "type": "string",
                          "example": "USDT"
                        },
                        "platform": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            },
                            "title": {
                              "type": "string",
                              "example": "Ethereum"
                            }
                          }
                        }
                      }
                    },
                    "transactions": {
                      "type": "array"
                    },
                    "ledger_account": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "01G27GBKX653FKV2S0SCXXDBES"
                        },
                        "currency": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 97,
                              "default": 0
                            },
                            "title": {
                              "type": "string",
                              "example": "Tether"
                            },
                            "symbol": {
                              "type": "string",
                              "example": "USDT"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"message\": \"Refund is not valid\",\n\t\"reason\": \"RefundIsNotValid\",\n\t\"errors\": [\n\t\t\"Request amount can't be blank\",\n\t\t\"Request amount must be higher than 1.0 EUR\",\n\t\t\"Request amount is not a number\",\n\t\t\"Refund amount can't be blank\",\n\t\t\"Refund amount is not a number\",\n\t\t\"Balance debit amount can't be blank\",\n\t\t\"Balance debit amount is not a number\"\n\t]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Refund is not valid"
                    },
                    "reason": {
                      "type": "string",
                      "example": "RefundIsNotValid"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Request amount can't be blank"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "Get Order Refunds",
        "description": "Retrieves all refunds for an order.\n\nBefore making a <b>GET Order Refunds</b> request, a [POST Create Order](/reference/create-order) request should be made. \n\nAfter an order is created, you will get the order ID which will be used in the <b>GET Order Refunds</b> request.",
        "operationId": "get-refund",
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "description": "ID of the order to be refunded",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "page": {
                    "type": "integer",
                    "description": "Current page number",
                    "default": 1,
                    "format": "int32"
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Number of refunds per page",
                    "default": 100,
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"current_page\": 1,\n  \"per_page\": 100,\n  \"total_refunds\": 2,\n  \"total_pages\": 1,\n  \"refunds\": [\n    {\n      \"id\": 2,\n      \"request_amount\": \"1.0\",\n      \"refund_amount\": \"1.0553\",\n      \"address\": \"0x165E05749951AB88B5F17bd1f2080eC3dFB442E6\",\n      \"status\": \"pending\",\n      \"memo\": null,\n      \"created_at\": \"2022-05-04T13:30:38+00:00\",\n      \"order\": {\n        \"id\": 11874016,\n        \"title\": null,\n        \"price_amount\": \"2.0\",\n        \"created_at\": \"2022-05-04T10:50:01+00:00\",\n        \"price_currency\": {\n          \"id\": 11,\n          \"title\": \"Euro\",\n          \"kind\": \"fiat\",\n          \"symbol\": \"EUR\"\n        }\n      },\n      \"refund_currency\": {\n        \"id\": 97,\n        \"title\": \"Tether\",\n        \"symbol\": \"USDT\",\n        \"platform\": {\n          \"id\": 1,\n          \"title\": \"Ethereum\"\n        }\n      },\n      \"transactions\": [],\n      \"ledger_account\": {\n        \"id\": \"01G27GBKX653FKV2S0SCXXDBES\",\n        \"currency\": {\n          \"id\": 97,\n          \"title\": \"Tether\",\n          \"symbol\": \"USDT\"\n        }\n      }\n    },\n    {\n      \"id\": 1,\n      \"request_amount\": \"1.0\",\n      \"refund_amount\": \"1.0541\",\n      \"address\": \"0x165E05749951AB88B5F17bd1f2080eC3dFB442E6\",\n      \"status\": \"completed\",\n      \"memo\": null,\n      \"created_at\": \"2022-05-04T12:33:33+00:00\",\n      \"order\": {\n        \"id\": 11874016,\n        \"title\": null,\n        \"price_amount\": \"2.0\",\n        \"created_at\": \"2022-05-04T10:50:01+00:00\",\n        \"price_currency\": {\n          \"id\": 11,\n          \"title\": \"Euro\",\n          \"kind\": \"fiat\",\n          \"symbol\": \"EUR\"\n        }\n      },\n      \"refund_currency\": {\n        \"id\": 97,\n        \"title\": \"Tether\",\n        \"symbol\": \"USDT\",\n        \"platform\": {\n          \"id\": 1,\n          \"title\": \"Ethereum\"\n        }\n      },\n      \"transactions\": [],\n      \"ledger_account\": {\n        \"id\": \"01G27GBKX653FKV2S0SCXXDBES\",\n        \"currency\": {\n          \"id\": 97,\n          \"title\": \"Tether\",\n          \"symbol\": \"USDT\"\n        }\n      }\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "current_page": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "per_page": {
                      "type": "integer",
                      "example": 100,
                      "default": 0
                    },
                    "total_refunds": {
                      "type": "integer",
                      "example": 2,
                      "default": 0
                    },
                    "total_pages": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "refunds": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 2,
                            "default": 0
                          },
                          "request_amount": {
                            "type": "string",
                            "example": "1.0"
                          },
                          "refund_amount": {
                            "type": "string",
                            "example": "1.0553"
                          },
                          "address": {
                            "type": "string",
                            "example": "0x165E05749951AB88B5F17bd1f2080eC3dFB442E6"
                          },
                          "status": {
                            "type": "string",
                            "example": "pending"
                          },
                          "memo": {},
                          "created_at": {
                            "type": "string",
                            "example": "2022-05-04T13:30:38+00:00"
                          },
                          "order": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 11874016,
                                "default": 0
                              },
                              "title": {},
                              "price_amount": {
                                "type": "string",
                                "example": "2.0"
                              },
                              "created_at": {
                                "type": "string",
                                "example": "2022-05-04T10:50:01+00:00"
                              },
                              "price_currency": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "example": 11,
                                    "default": 0
                                  },
                                  "title": {
                                    "type": "string",
                                    "example": "Euro"
                                  },
                                  "kind": {
                                    "type": "string",
                                    "example": "fiat"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "example": "EUR"
                                  }
                                }
                              }
                            }
                          },
                          "refund_currency": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 97,
                                "default": 0
                              },
                              "title": {
                                "type": "string",
                                "example": "Tether"
                              },
                              "symbol": {
                                "type": "string",
                                "example": "USDT"
                              },
                              "platform": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "example": 1,
                                    "default": 0
                                  },
                                  "title": {
                                    "type": "string",
                                    "example": "Ethereum"
                                  }
                                }
                              }
                            }
                          },
                          "transactions": {
                            "type": "array"
                          },
                          "ledger_account": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "01G27GBKX653FKV2S0SCXXDBES"
                              },
                              "currency": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "example": 97,
                                    "default": 0
                                  },
                                  "title": {
                                    "type": "string",
                                    "example": "Tether"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "example": "USDT"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"message\": \"Order not found\",\n  \"reason\": \"OrderNotFound\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Order not found"
                    },
                    "reason": {
                      "type": "string",
                      "example": "OrderNotFound"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/refunds": {
      "get": {
        "summary": "Get Refunds",
        "description": "Retrieves all refunds.\n\n❗To create requests within the CoinGate system the user should have an authentication token. To get it, please follow the instructions <a href=\"https://developer.coingate.com/docs/api-authentication\" target=\"_blank\">here</a>.",
        "operationId": "get-refunds",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "page": {
                    "type": "integer",
                    "description": "Current page number",
                    "default": 1,
                    "format": "int32"
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Number of refunds per page (max - 100)",
                    "default": 100,
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"current_page\": 1,\n  \"per_page\": 100,\n  \"total_refunds\": 2,\n  \"total_pages\": 1,\n  \"refunds\": [\n    {\n      \"id\": 2,\n      \"request_amount\": \"1.0\",\n      \"refund_amount\": \"1.0553\",\n      \"address\": \"0x165E05749951AB88B5F17bd1f2080eC3dFB442E6\",\n      \"status\": \"pending\",\n      \"memo\": null,\n      \"created_at\": \"2022-05-04T13:30:38+00:00\",\n      \"order\": {\n        \"id\": 11874016,\n        \"title\": null,\n        \"price_amount\": \"2.0\",\n        \"created_at\": \"2022-05-04T10:50:01+00:00\",\n        \"price_currency\": {\n          \"id\": 11,\n          \"title\": \"Euro\",\n          \"kind\": \"fiat\",\n          \"symbol\": \"EUR\"\n        }\n      },\n      \"refund_currency\": {\n        \"id\": 97,\n        \"title\": \"Tether\",\n        \"symbol\": \"USDT\",\n        \"platform\": {\n          \"id\": 1,\n          \"title\": \"Ethereum\"\n        }\n      },\n      \"transactions\": [],\n      \"ledger_account\": {\n        \"id\": \"01G27GBKX653FKV2S0SCXXDBES\",\n        \"currency\": {\n          \"id\": 97,\n          \"title\": \"Tether\",\n          \"symbol\": \"USDT\"\n        }\n      }\n    },\n    {\n      \"id\": 1,\n      \"request_amount\": \"1.0\",\n      \"refund_amount\": \"1.0541\",\n      \"address\": \"0x165E05749951AB88B5F17bd1f2080eC3dFB442E6\",\n      \"status\": \"completed\",\n      \"memo\": null,\n      \"created_at\": \"2022-05-04T12:33:33+00:00\",\n      \"order\": {\n        \"id\": 11874016,\n        \"title\": null,\n        \"price_amount\": \"2.0\",\n        \"created_at\": \"2022-05-04T10:50:01+00:00\",\n        \"price_currency\": {\n          \"id\": 11,\n          \"title\": \"Euro\",\n          \"kind\": \"fiat\",\n          \"symbol\": \"EUR\"\n        }\n      },\n      \"refund_currency\": {\n        \"id\": 97,\n        \"title\": \"Tether\",\n        \"symbol\": \"USDT\",\n        \"platform\": {\n          \"id\": 1,\n          \"title\": \"Ethereum\"\n        }\n      },\n      \"transactions\": [],\n      \"ledger_account\": {\n        \"id\": \"01G27GBKX653FKV2S0SCXXDBES\",\n        \"currency\": {\n          \"id\": 97,\n          \"title\": \"Tether\",\n          \"symbol\": \"USDT\"\n        }\n      }\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "current_page": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "per_page": {
                      "type": "integer",
                      "example": 100,
                      "default": 0
                    },
                    "total_refunds": {
                      "type": "integer",
                      "example": 2,
                      "default": 0
                    },
                    "total_pages": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "refunds": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 2,
                            "default": 0
                          },
                          "request_amount": {
                            "type": "string",
                            "example": "1.0"
                          },
                          "refund_amount": {
                            "type": "string",
                            "example": "1.0553"
                          },
                          "address": {
                            "type": "string",
                            "example": "0x165E05749951AB88B5F17bd1f2080eC3dFB442E6"
                          },
                          "status": {
                            "type": "string",
                            "example": "pending"
                          },
                          "memo": {},
                          "created_at": {
                            "type": "string",
                            "example": "2022-05-04T13:30:38+00:00"
                          },
                          "order": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 11874016,
                                "default": 0
                              },
                              "title": {},
                              "price_amount": {
                                "type": "string",
                                "example": "2.0"
                              },
                              "created_at": {
                                "type": "string",
                                "example": "2022-05-04T10:50:01+00:00"
                              },
                              "price_currency": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "example": 11,
                                    "default": 0
                                  },
                                  "title": {
                                    "type": "string",
                                    "example": "Euro"
                                  },
                                  "kind": {
                                    "type": "string",
                                    "example": "fiat"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "example": "EUR"
                                  }
                                }
                              }
                            }
                          },
                          "refund_currency": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 97,
                                "default": 0
                              },
                              "title": {
                                "type": "string",
                                "example": "Tether"
                              },
                              "symbol": {
                                "type": "string",
                                "example": "USDT"
                              },
                              "platform": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "example": 1,
                                    "default": 0
                                  },
                                  "title": {
                                    "type": "string",
                                    "example": "Ethereum"
                                  }
                                }
                              }
                            }
                          },
                          "transactions": {
                            "type": "array"
                          },
                          "ledger_account": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "01G27GBKX653FKV2S0SCXXDBES"
                              },
                              "currency": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "example": 97,
                                    "default": 0
                                  },
                                  "title": {
                                    "type": "string",
                                    "example": "Tether"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "example": "USDT"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "401",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"message\": \"Auth Token is not valid\",\n\t\"reason\": \"BadAuthToken\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Auth Token is not valid"
                    },
                    "reason": {
                      "type": "string",
                      "example": "BadAuthToken"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/orders/{order_id}/refunds/{id}": {
      "get": {
        "summary": "Get Order Refund",
        "description": "Retrieves a specific refund for an order.\n\nBefore making a <b>GET Order Refund</b> request, a [POST Create Order](/reference/create-order) request should be made. \n\nAfter an order is created, you will get the order ID which will be used in the <b>GET Order Refund</b> request.\n\nBefore making a <b>GET Order Refund</b> request, a [POST Create Order Refund](/reference/create-refund) request should be made.\n\nAfter creating a refund for an order, you will get the refund ID which will be used in the <b>GET Order Refund</b> request.",
        "operationId": "get-order-refund",
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "description": "ID of the order to be refunded",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the refund",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n   \"id\":2,\n   \"request_amount\":\"1.0\",\n   \"refund_amount\":\"1.0553\",\n   \"address\":\"0x165E05749951AB88B5F17bd1f2080eC3dFB442E6\",\n   \"status\":\"pending\",\n   \"memo\":null,\n   \"created_at\":\"2022-05-04T13:30:38+00:00\",\n   \"order\":{\n      \"id\":11874016,\n      \"title\":null,\n      \"price_amount\":\"2.0\",\n      \"created_at\":\"2022-05-04T10:50:01+00:00\",\n      \"price_currency\":{\n         \"id\":11,\n         \"title\":\"Euro\",\n         \"kind\":\"fiat\",\n         \"symbol\":\"EUR\"\n      }\n   },\n   \"refund_currency\":{\n      \"id\":97,\n      \"title\":\"Tether\",\n      \"symbol\":\"USDT\",\n      \"platform\":{\n         \"id\":1,\n         \"title\":\"Ethereum\"\n      }\n   },\n   \"transactions\":[],\n   \"ledger_account\":{\n      \"id\":\"01G27GBKX653FKV2S0SCXXDBES\",\n      \"currency\":{\n         \"id\":97,\n         \"title\":\"Tether\",\n         \"symbol\":\"USDT\"\n      }\n   }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 2,
                      "default": 0
                    },
                    "request_amount": {
                      "type": "string",
                      "example": "1.0"
                    },
                    "refund_amount": {
                      "type": "string",
                      "example": "1.0553"
                    },
                    "address": {
                      "type": "string",
                      "example": "0x165E05749951AB88B5F17bd1f2080eC3dFB442E6"
                    },
                    "status": {
                      "type": "string",
                      "example": "pending"
                    },
                    "memo": {},
                    "created_at": {
                      "type": "string",
                      "example": "2022-05-04T13:30:38+00:00"
                    },
                    "order": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 11874016,
                          "default": 0
                        },
                        "title": {},
                        "price_amount": {
                          "type": "string",
                          "example": "2.0"
                        },
                        "created_at": {
                          "type": "string",
                          "example": "2022-05-04T10:50:01+00:00"
                        },
                        "price_currency": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 11,
                              "default": 0
                            },
                            "title": {
                              "type": "string",
                              "example": "Euro"
                            },
                            "kind": {
                              "type": "string",
                              "example": "fiat"
                            },
                            "symbol": {
                              "type": "string",
                              "example": "EUR"
                            }
                          }
                        }
                      }
                    },
                    "refund_currency": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 97,
                          "default": 0
                        },
                        "title": {
                          "type": "string",
                          "example": "Tether"
                        },
                        "symbol": {
                          "type": "string",
                          "example": "USDT"
                        },
                        "platform": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            },
                            "title": {
                              "type": "string",
                              "example": "Ethereum"
                            }
                          }
                        }
                      }
                    },
                    "transactions": {
                      "type": "array"
                    },
                    "ledger_account": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "01G27GBKX653FKV2S0SCXXDBES"
                        },
                        "currency": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 97,
                              "default": 0
                            },
                            "title": {
                              "type": "string",
                              "example": "Tether"
                            },
                            "symbol": {
                              "type": "string",
                              "example": "USDT"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"message\": \"Refund not found\",\n  \"reason\": \"RefundNotFound\"\n}"
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Order not found"
                        },
                        "reason": {
                          "type": "string",
                          "example": "OrderNotFound"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Refund not found"
                        },
                        "reason": {
                          "type": "string",
                          "example": "RefundNotFound"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ledger/accounts": {
      "get": {
        "summary": "List Accounts",
        "description": "Retrieves all ledger accounts.\n\n❗To create requests within the CoinGate system the user should have an authentication token. To get it, please follow the instructions <a href=\"https://developer.coingate.com/docs/api-authentication\" target=\"_blank\">here</a>.",
        "operationId": "accounts",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Current page number",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of refunds per page (max - 100)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"current_page\": 1,\n  \"per_page\": 100,\n  \"total_accounts\": 1,\n  \"total_pages\": 1,\n  \"accounts\": [\n    {\n      \"id\": \"01G0EM0RRVREB4WD5KDB6VJVPM\",\n      \"balance\": \"0.00501229\",\n      \"status\": \"active\",\n      \"currency\": {\n        \"id\": 1,\n        \"title\": \"Bitcoin\",\n        \"symbol\": \"BTC\"\n      }\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "current_page": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "per_page": {
                      "type": "integer",
                      "example": 100,
                      "default": 0
                    },
                    "total_accounts": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "total_pages": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "accounts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "01G0EM0RRVREB4WD5KDB6VJVPM"
                          },
                          "balance": {
                            "type": "string",
                            "example": "0.00501229"
                          },
                          "status": {
                            "type": "string",
                            "example": "active"
                          },
                          "currency": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 1,
                                "default": 0
                              },
                              "title": {
                                "type": "string",
                                "example": "Bitcoin"
                              },
                              "symbol": {
                                "type": "string",
                                "example": "BTC"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "401",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"message\": \"Auth Token is not valid\",\n\t\"reason\": \"BadAuthToken\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Auth Token is not valid"
                    },
                    "reason": {
                      "type": "string",
                      "example": "BadAuthToken"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/billing/subscriptions/{id}/cancel": {
      "patch": {
        "summary": "Cancel Subscription",
        "description": "Cancels a specific subscription.\n\nBefore making a <b>PATCH Cancel Subscription</b> request, a [POST Create Subscription](/reference/create-subscription) request should be made. \n\nThen a [PATCH Activate Subscription](/reference/activate-subscription) request should be made to activate the subscription & start accepting payments. \n\nAfter a subscription is created, you will get the subscription ID which will be used in the <b>PATCH Cancel Subscription</b> request.\n\n❗To create requests within the CoinGate system the user should have an authentication token. To get it, please follow the instructions <a href=\"https://developer.coingate.com/docs/api-authentication\" target=\"_blank\">here</a>.",
        "operationId": "cancel-subscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of subscription",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"id\": 2,\n  \"status\": \"canceled\",\n  \"start_date\": \"2022-03-25\",\n  \"end_date\": \"2022-03-25\",\n  \"next_delivery_date\": null,\n  \"due_days_period\": null,\n  \"created_at\": \"2022-03-25T08:32:30.000Z\",\n  \"subscription_id\": \"SUB-3\",\n  \"details\": {\n    \"id\": 85,\n    \"send_paid_notification\": true,\n  \t\"send_payment_email\": null,\n    \"title\": \"Some Hosting Company\",\n    \"description\": \"Your purchase at Some Hosting Company\",\n    \"payment_method\": \"instant\",\n    \"callback_url\": \"https://yourcallbackurl.com/callbacks\",\n \t \t\"underpaid_cover_pct\": \"0.0\",\n    \"details_id\": \"301\",\n    \"price_currency\": \"EUR\",\n    \"receive_currency\": \"BTC\",\n    \"items\": [\n      {\n        \"id\": 139,\n        \"description\": \"Very big server\",\n        \"quantity\": 1,\n        \"price\": \"10.8\",\n        \"item_id\": \"401\"\n      }\n    ]\n  },\n  \"subscriber\": {\n    \"id\": 128,\n    \"email\": \"lorem@ipsum.com\",\n    \"organisation_name\": \"\",\n    \"first_name\": \"John\",\n    \"last_name\": \"Smith\",\n    \"address\": \"New N Rd, Islington\",\n    \"secondary_address\": null,\n    \"city\": \"London\",\n    \"postal_code\": \"N18SY\",\n    \"country\": \"United Kingdom\",\n    \"subscriber_id\": null\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 2,
                      "default": 0
                    },
                    "status": {
                      "type": "string",
                      "example": "canceled"
                    },
                    "start_date": {
                      "type": "string",
                      "example": "2022-03-25"
                    },
                    "end_date": {
                      "type": "string",
                      "example": "2022-03-25"
                    },
                    "next_delivery_date": {},
                    "due_days_period": {},
                    "created_at": {
                      "type": "string",
                      "example": "2022-03-25T08:32:30.000Z"
                    },
                    "subscription_id": {
                      "type": "string",
                      "example": "SUB-3"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 85,
                          "default": 0
                        },
                        "send_paid_notification": {
                          "type": "boolean",
                          "example": true,
                          "default": true
                        },
                        "send_payment_email": {},
                        "title": {
                          "type": "string",
                          "example": "Some Hosting Company"
                        },
                        "description": {
                          "type": "string",
                          "example": "Your purchase at Some Hosting Company"
                        },
                        "payment_method": {
                          "type": "string",
                          "example": "instant"
                        },
                        "callback_url": {
                          "type": "string",
                          "example": "https://yourcallbackurl.com/callbacks"
                        },
                        "underpaid_cover_pct": {
                          "type": "string",
                          "example": "0.0"
                        },
                        "details_id": {
                          "type": "string",
                          "example": "301"
                        },
                        "price_currency": {
                          "type": "string",
                          "example": "EUR"
                        },
                        "receive_currency": {
                          "type": "string",
                          "example": "BTC"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 139,
                                "default": 0
                              },
                              "description": {
                                "type": "string",
                                "example": "Very big server"
                              },
                              "quantity": {
                                "type": "integer",
                                "example": 1,
                                "default": 0
                              },
                              "price": {
                                "type": "string",
                                "example": "10.8"
                              },
                              "item_id": {
                                "type": "string",
                                "example": "401"
                              }
                            }
                          }
                        }
                      }
                    },
                    "subscriber": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 128,
                          "default": 0
                        },
                        "email": {
                          "type": "string",
                          "example": "lorem@ipsum.com"
                        },
                        "organisation_name": {
                          "type": "string",
                          "example": ""
                        },
                        "first_name": {
                          "type": "string",
                          "example": "John"
                        },
                        "last_name": {
                          "type": "string",
                          "example": "Smith"
                        },
                        "address": {
                          "type": "string",
                          "example": "New N Rd, Islington"
                        },
                        "secondary_address": {},
                        "city": {
                          "type": "string",
                          "example": "London"
                        },
                        "postal_code": {
                          "type": "string",
                          "example": "N18SY"
                        },
                        "country": {
                          "type": "string",
                          "example": "United Kingdom"
                        },
                        "subscriber_id": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"errors\": [\n\t\t\"This subscription is already CANCELED\"\n\t]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "This subscription is already CANCELED"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/billing/subscriptions/{id}/renew": {
      "patch": {
        "summary": "Renew Subscription",
        "description": "Renews a specific canceled subscription.\n\nBefore making a <b>PATCH Renew Subscription</b> request, a [POST Create Subscription](/reference/create-subscription) request should be made. \n\nThen a [PATCH Activate Subscription](/reference/activate-subscription) request should be made to activate the subscription & start accepting payments.\n\nAnd after that the subscription can be canceled with a [PATCH Cancel Subscription](/reference/cancel-subscription) request.\n\nAfter a subscription is created, you will get the subscription ID which will be used in the <b>PATCH Cancel Subscription</b> request.\n\n❗To create requests within the CoinGate system the user should have an authentication token. To get it, please follow the instructions <a href=\"https://developer.coingate.com/docs/api-authentication\" target=\"_blank\">here</a>.",
        "operationId": "renew-subscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of subscription",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"id\": 2,\n  \"status\": \"active\",\n  \"start_date\": \"2022-03-25\",\n  \"end_date\": \"2022-03-25\",\n  \"next_delivery_date\": \"2022-04-24\",\n  \"due_days_period\": 30,\n  \"created_at\": \"2022-03-25T08:32:30.000Z\",\n  \"subscription_id\": \"SUB-3\",\n  \"details\": {\n    \"id\": 85,\n    \"send_paid_notification\": true,\n  \t\"send_payment_email\": null,\n    \"title\": \"Some Hosting Company\",\n    \"description\": \"Your purchase at Some Hosting Company\",\n    \"payment_method\": \"instant\",\n    \"callback_url\": \"https://yourcallbackurl.com/callbacks\",\n \t \t\"underpaid_cover_pct\": \"0.0\",\n    \"details_id\": \"301\",\n    \"price_currency\": \"EUR\",\n    \"receive_currency\": \"BTC\",\n    \"items\": [\n      {\n        \"id\": 139,\n        \"description\": \"Very big server\",\n        \"quantity\": 1,\n        \"price\": \"10.8\",\n        \"item_id\": \"401\"\n      }\n    ]\n  },\n  \"subscriber\": {\n    \"id\": 128,\n    \"email\": \"lorem@ipsum.com\",\n    \"organisation_name\": \"\",\n    \"first_name\": \"John\",\n    \"last_name\": \"Smith\",\n    \"address\": \"New N Rd, Islington\",\n    \"secondary_address\": null,\n    \"city\": \"London\",\n    \"postal_code\": \"N18SY\",\n    \"country\": \"United Kingdom\",\n    \"subscriber_id\": null\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 2,
                      "default": 0
                    },
                    "status": {
                      "type": "string",
                      "example": "active"
                    },
                    "start_date": {
                      "type": "string",
                      "example": "2022-03-25"
                    },
                    "end_date": {
                      "type": "string",
                      "example": "2022-03-25"
                    },
                    "next_delivery_date": {
                      "type": "string",
                      "example": "2022-04-24"
                    },
                    "due_days_period": {
                      "type": "integer",
                      "example": 30,
                      "default": 0
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2022-03-25T08:32:30.000Z"
                    },
                    "subscription_id": {
                      "type": "string",
                      "example": "SUB-3"
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 85,
                          "default": 0
                        },
                        "send_paid_notification": {
                          "type": "boolean",
                          "example": true,
                          "default": true
                        },
                        "send_payment_email": {},
                        "title": {
                          "type": "string",
                          "example": "Some Hosting Company"
                        },
                        "description": {
                          "type": "string",
                          "example": "Your purchase at Some Hosting Company"
                        },
                        "payment_method": {
                          "type": "string",
                          "example": "instant"
                        },
                        "callback_url": {
                          "type": "string",
                          "example": "https://yourcallbackurl.com/callbacks"
                        },
                        "underpaid_cover_pct": {
                          "type": "string",
                          "example": "0.0"
                        },
                        "details_id": {
                          "type": "string",
                          "example": "301"
                        },
                        "price_currency": {
                          "type": "string",
                          "example": "EUR"
                        },
                        "receive_currency": {
                          "type": "string",
                          "example": "BTC"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 139,
                                "default": 0
                              },
                              "description": {
                                "type": "string",
                                "example": "Very big server"
                              },
                              "quantity": {
                                "type": "integer",
                                "example": 1,
                                "default": 0
                              },
                              "price": {
                                "type": "string",
                                "example": "10.8"
                              },
                              "item_id": {
                                "type": "string",
                                "example": "401"
                              }
                            }
                          }
                        }
                      }
                    },
                    "subscriber": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 128,
                          "default": 0
                        },
                        "email": {
                          "type": "string",
                          "example": "lorem@ipsum.com"
                        },
                        "organisation_name": {
                          "type": "string",
                          "example": ""
                        },
                        "first_name": {
                          "type": "string",
                          "example": "John"
                        },
                        "last_name": {
                          "type": "string",
                          "example": "Smith"
                        },
                        "address": {
                          "type": "string",
                          "example": "New N Rd, Islington"
                        },
                        "secondary_address": {},
                        "city": {
                          "type": "string",
                          "example": "London"
                        },
                        "postal_code": {
                          "type": "string",
                          "example": "N18SY"
                        },
                        "country": {
                          "type": "string",
                          "example": "United Kingdom"
                        },
                        "subscriber_id": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"errors\": [\n\t\t\"This subscription is already Active\"\n\t]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "This subscription is already Active"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/invoice/{uuid}/request-void": {
      "post": {
        "summary": "Void Request",
        "description": "",
        "operationId": "void-request",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "Invoice UUID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "address",
                  "crypto_platform_id"
                ],
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "Crypto wallet address"
                  },
                  "additional_field": {
                    "type": "string",
                    "description": "Crypto addres memo or destination tag"
                  },
                  "crypto_platform_id": {
                    "type": "integer",
                    "description": "[Crypto Platform](https://developer.coingate.com/reference/platforms)",
                    "format": "int32"
                  },
                  "email": {
                    "type": "string",
                    "description": "Shopper's email"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "accept_payment": {
                    "type": "boolean",
                    "description": "If payment was paid in full, you can mark the ‘Accept Payment’ checkbox on the refund form and we will make every attempt to process this payment, however, it may not be possible and a refund may be required."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"id\": 9,\n  \"status\": \"pending\",\n  \"address\": \"36c3KtqTpnhCRXp5179HR6hpKxP2XDahKF\",\n  \"comment\": null,\n  \"additional_field\": null,\n  \"accept_payment\": false,\n  \"currency\": {\n    \"id\": 1,\n    \"title\": \"Bitcoin\",\n    \"symbol\": \"BTC\",\n    \"platform\": {\n      \"id\": 5,\n      \"title\": \"Bitcoin\"\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 9,
                      "default": 0
                    },
                    "status": {
                      "type": "string",
                      "example": "pending"
                    },
                    "address": {
                      "type": "string",
                      "example": "36c3KtqTpnhCRXp5179HR6hpKxP2XDahKF"
                    },
                    "comment": {},
                    "additional_field": {},
                    "accept_payment": {
                      "type": "boolean",
                      "example": false,
                      "default": true
                    },
                    "currency": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "title": {
                          "type": "string",
                          "example": "Bitcoin"
                        },
                        "symbol": {
                          "type": "string",
                          "example": "BTC"
                        },
                        "platform": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 5,
                              "default": 0
                            },
                            "title": {
                              "type": "string",
                              "example": "Bitcoin"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"errors\": {\n    \"fields\": {\n      \"crypto_platform_id\": [\n        \"not found or does not belong to this currency\"\n      ]\n    },\n    \"full_messages\": [\n      \"Crypto platform not found or does not belong to this currency\"\n    ]\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "fields": {
                          "type": "object",
                          "properties": {
                            "crypto_platform_id": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "example": "not found or does not belong to this currency"
                              }
                            }
                          }
                        },
                        "full_messages": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "Crypto platform not found or does not belong to this currency"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    }
  },
  "x-readme": {
    "headers": []
  },
  "x-readme-fauxas": true
}